name: strongR-frida

on:
  schedule:
    - cron: "0 9/12 * * *"
  workflow_dispatch:

jobs: 
  check_version:
    runs-on: ubuntu-20.04

    outputs:
      FRIDA_VERSION: ${{ steps.pullFridaLatestRelease.outputs.FRIDA_VERSION }}
      ALREADY_RELEASE: ${{ steps.checkReleaseVersion.outputs.ALREADY_RELEASE }}
    steps:
      - name: Pull Frida Latest Release
        id: pullFridaLatestRelease
        uses: actions/github-script@v3.1.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const releaseResponse = await github.repos.getLatestRelease({
              owner: 'frida',
              repo: 'frida',
            })
            const {
              data: { tag_name: ver }
            } = releaseResponse;
            core.setOutput('FRIDA_VERSION', ver);
      - name: Check release version
        id: checkReleaseVersion
        uses: actions/github-script@v3.1.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            try {
              const releaseVersion = '${{ steps.pullFridaLatestRelease.outputs.FRIDA_VERSION }}'
              const releaseResponse = await github.repos.getReleaseByTag({
                owner: '${{ secrets.GIT_OWNER }}',
                repo: '${{ secrets.GIT_REPO }}',
                tag: releaseVersion
              });
              const {
                data: { tag_name: ver }
              } = releaseResponse;
              if (ver == '${{ steps.pullFridaLatestRelease.outputs.FRIDA_VERSION }}'){
                  core.setOutput('ALREADY_RELEASE', '1');
              }
              else{
                  core.setOutput('ALREADY_RELEASE', '0');
              }
            } catch (e) {
              if(e.message == 'Not Found'){
                core.setOutput('ALREADY_RELEASE', '0');
              }
              else{
                core.setFailed(e.message);
              }
            }


  create_release:
    needs: check_version
    runs-on: ubuntu-20.04
    if: needs.check_version.outputs.ALREADY_RELEASE == '0'

    steps:
      - uses: actions/create-release@master
        id: createRelease
        name: Create Runner Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "${{ needs.check_version.outputs.FRIDA_VERSION }}"
          release_name: "${{ needs.check_version.outputs.FRIDA_VERSION }}"
          prerelease: false

  android_build:
    runs-on: ubuntu-20.04
    needs: [check_version, create_release]
    strategy:
      matrix:
        arch: [x86, x86_64, arm, arm64]
      fail-fast: false

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 18

    - uses: fusion-engineering/setup-git-credentials@v2
      with:
        credentials: ${{secrets.GIT_CREDENTIALS}}

    - name: set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: "temurin"
        java-version: "17"

    - name: Setup Android NDK
      id: setup-ndk
      uses: nttld/setup-ndk@v1.0.6
      with:
        ndk-version: r25b
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v5.1.0
      with:
        python-version: '3.9'

    - name: install dependencies
      run: |
        sudo apt-get update && DEBIAN_FRONTEND=noninteractive sudo apt-get install build-essential tree ninja-build gcc-multilib g++-multilib lib32stdc++-9-dev flex bison xz-utils ruby ruby-dev python3-requests python3-setuptools python3-dev python3-pip libc6-dev libc6-dev-i386 -y
        python3 -m pip install lief
        python3 -m pip install graphlib

    # - name: Setup tmate session
    #   uses: mxschmitt/action-tmate@v3

    - name: build frida for Android
      shell: bash
      run: |
        git config --global user.name "${{ secrets.GIT_NAME }}"
        git config --global user.email "${{ secrets.GIT_EMAIL }}"
        export ANDROID_NDK_ROOT=${{ steps.setup-ndk.outputs.ndk-path }}
        git clone ${{ secrets.PATCH_REPO }} strongR
        git clone --recurse-submodules https://github.com/frida/frida
    - name: two step patch   
      shell: bash
      run: |
        cd frida/subprojects/frida-core
        git apply --ignore-space-change --ignore-whitespace ../../../strongR/patches/*.patch
        
    - name: Configure
      shell: bash
      run: |
          cd frida
          mkdir build-${{ matrix.arch }}
          cd build-${{ matrix.arch }}
          ../configure  --host=android-${{ matrix.arch }}
          make

    - name: Check release version
      id: checkReleaseVersion
      uses: actions/github-script@v3.1.0
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          try {
            const releaseVersion = '${{ needs.check_version.outputs.FRIDA_VERSION }}'
            const releaseResponse = await github.repos.getReleaseByTag({
              owner: '${{ secrets.GIT_OWNER }}',
              repo: '${{ secrets.GIT_REPO }}',
              tag: releaseVersion
            })
            const {
              data: { id: releaseId, html_url: htmlUrl, upload_url: uploadUrl }
            } = releaseResponse;
            core.setOutput('id', releaseId);
            core.setOutput('html_url', htmlUrl);
            core.setOutput('upload_url', uploadUrl);
            core.setOutput('version', releaseVersion);
          } catch (e) {
            core.setFailed(e.message);
          }
    - name: package build result for Android
      shell: bash
      run: |
        pushd frida
        
        xz "build-${{ matrix.arch }}/subprojects/frida-core/server/frida-server"
        xz "build-${{ matrix.arch }}/subprojects/frida-core/lib/gadget/frida-gadget.so"
        xz "build-${{ matrix.arch }}/subprojects/frida-core/inject/frida-inject"                
        popd
   
  github_upload:
    runs-on: ubuntu-20.04
    needs: [check_version, create_release, android_build]
    strategy:
      matrix:
        arch: [x86, x86_64, arm, arm64]
      fail-fast: false

    steps:
    - name: Upload frida-server for strongR-frida
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: '${{ steps.checkReleaseVersion.outputs.upload_url }}'
        asset_path: '${{ github.workspace }}/frida/build-${{ matrix.arch }}/subprojects/frida-core/server/frida-server.xz'
        asset_name: 'nya-server-${{ needs.check_version.outputs.FRIDA_VERSION }}-android-${{ needs.check_version.outputs.FRIDA_VERSION }}.xz'
        asset_content_type: application/octet-stream

    - name: Upload android frida-inject for strongR-frida
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: '${{ steps.checkReleaseVersion.outputs.upload_url }}'
        asset_path: '${{ github.workspace }}/frida/build-${{ matrix.arch }}/subprojects/frida-core/inject/frida-inject.xz'
        asset_name: 'nya-inject-${{ needs.check_version.outputs.FRIDA_VERSION }}-android-${{ matrix.arch }}.xz'
        asset_content_type: application/octet-stream
    
    - name: Upload android frida-gadget for strongR-frida
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: '${{ steps.checkReleaseVersion.outputs.upload_url }}'
        asset_path: '${{ github.workspace }}/frida/build-${{ matrix.arch }}/subprojects/frida-core/lib/gadget/frida-gadget.xz'
        asset_name: 'nya-gadget-${{ needs.check_version.outputs.FRIDA_VERSION }}-android-${{ matrix.arch }}.so.xz'
        asset_content_type: application/octet-stream

